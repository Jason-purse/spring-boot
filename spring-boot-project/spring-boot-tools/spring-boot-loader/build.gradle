plugins {
	id "java-library"
	id "org.springframework.boot.conventions"
	id "org.springframework.boot.deployed"
}

description = "Spring Boot Loader"

dependencies {
	compileOnly("org.springframework:spring-core")

	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation("org.assertj:assertj-core")
	testImplementation("org.awaitility:awaitility")
	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.mockito:mockito-core")
	testImplementation("org.springframework:spring-test")

	testRuntimeOnly("ch.qos.logback:logback-classic")
	testRuntimeOnly("org.bouncycastle:bcprov-jdk16:1.46")
	testRuntimeOnly("org.slf4j:jcl-over-slf4j")
	testRuntimeOnly("org.springframework:spring-webmvc")
}

tasks.named("compileJava") {
	options.compilerArgs = ['-Xlint:unchecked']

	// Try to turn them all off automatically
	options.compilerArgs << '-Xlint:none'
	options.compilerArgs << '-nowarn' // same as '-Xlint:none'

	// Turn them off manually
	options.compilerArgs << '-Xlint:-auxiliaryclass'
	options.compilerArgs << '-Xlint:-cast'
	options.compilerArgs << '-Xlint:-classfile'
	options.compilerArgs << '-Xlint:-deprecation'
	options.compilerArgs << '-Xlint:-dep-ann'
	options.compilerArgs << '-Xlint:-divzero'
	options.compilerArgs << '-Xlint:-empty'
	options.compilerArgs << '-Xlint:-fallthrough'
	options.compilerArgs << '-Xlint:-finally'
	options.compilerArgs << '-Xlint:-options'
	options.compilerArgs << '-Xlint:-overloads'
	options.compilerArgs << '-Xlint:-overrides'
	options.compilerArgs << '-Xlint:-path'
	options.compilerArgs << '-Xlint:-processing'
	options.compilerArgs << '-Xlint:-rawtypes'
	options.compilerArgs << '-Xlint:-serial'
	options.compilerArgs << '-Xlint:-static'
	options.compilerArgs << '-Xlint:-try'
	options.compilerArgs << '-Xlint:-unchecked'
	options.compilerArgs << '-Xlint:-varargs'
	options.compilerArgs << '-XDignore.symbol.file'
	options.fork = true // may not needed on 1.8
	options.forkOptions.executable = 'javac' // may not needed on 1.8
}

tasks.named("compileTestJava") {
	options.compilerArgs = ['-Xlint:unchecked']

	// Try to turn them all off automatically
	options.compilerArgs << '-Xlint:none'
	options.compilerArgs << '-nowarn' // same as '-Xlint:none'

	// Turn them off manually
	options.compilerArgs << '-Xlint:-auxiliaryclass'
	options.compilerArgs << '-Xlint:-cast'
	options.compilerArgs << '-Xlint:-classfile'
	options.compilerArgs << '-Xlint:-deprecation'
	options.compilerArgs << '-Xlint:-dep-ann'
	options.compilerArgs << '-Xlint:-divzero'
	options.compilerArgs << '-Xlint:-empty'
	options.compilerArgs << '-Xlint:-fallthrough'
	options.compilerArgs << '-Xlint:-finally'
	options.compilerArgs << '-Xlint:-options'
	options.compilerArgs << '-Xlint:-overloads'
	options.compilerArgs << '-Xlint:-overrides'
	options.compilerArgs << '-Xlint:-path'
	options.compilerArgs << '-Xlint:-processing'
	options.compilerArgs << '-Xlint:-rawtypes'
	options.compilerArgs << '-Xlint:-serial'
	options.compilerArgs << '-Xlint:-static'
	options.compilerArgs << '-Xlint:-try'
	options.compilerArgs << '-Xlint:-unchecked'
	options.compilerArgs << '-Xlint:-varargs'
	options.compilerArgs << '-XDignore.symbol.file'
	options.fork = true // may not needed on 1.8
	options.forkOptions.executable = 'javac' // may not needed on 1.8
}



// 解决编译异常问题 ... warning 以及 error ..
// 默认开启了 -Werror 导致warning 编译错误  ..

// 参考 https://snailgary.org/9c2d6b5842fa90afb1960b2cf301cb33
tasks.withType(JavaCompile) {
	options.compilerArgs = ['-Xlint:unchecked']

	// Try to turn them all off automatically
	options.compilerArgs << '-Xlint:none'
	options.compilerArgs << '-nowarn' // same as '-Xlint:none'

	// Turn them off manually
	options.compilerArgs << '-Xlint:-auxiliaryclass'
	options.compilerArgs << '-Xlint:-cast'
	options.compilerArgs << '-Xlint:-classfile'
	options.compilerArgs << '-Xlint:-deprecation'
	options.compilerArgs << '-Xlint:-dep-ann'
	options.compilerArgs << '-Xlint:-divzero'
	options.compilerArgs << '-Xlint:-empty'
	options.compilerArgs << '-Xlint:-fallthrough'
	options.compilerArgs << '-Xlint:-finally'
	options.compilerArgs << '-Xlint:-options'
	options.compilerArgs << '-Xlint:-overloads'
	options.compilerArgs << '-Xlint:-overrides'
	options.compilerArgs << '-Xlint:-path'
	options.compilerArgs << '-Xlint:-processing'
	options.compilerArgs << '-Xlint:-rawtypes'
	options.compilerArgs << '-Xlint:-serial'
	options.compilerArgs << '-Xlint:-static'
	options.compilerArgs << '-Xlint:-try'
	options.compilerArgs << '-Xlint:-unchecked'
	options.compilerArgs << '-Xlint:-varargs'
	options.compilerArgs << '-XDignore.symbol.file'
	options.fork = true // may not needed on 1.8
	options.forkOptions.executable = 'javac' // may not needed on 1.8
}
